import { PropsWithChildren } from 'react';
import { FutureverseAuthClient, SignInOptions, UserSession, OIDCUser, SignOutOptions } from '@futureverse/auth';
import { Signer } from '@futureverse/signer';
export type FutureverseAuthContextProps = {
    signIn: SignInMethod;
    /**
     * Deprecated in favor of signOutPass
     * @deprecated
     */
    signOut: (opts?: {
        beforeSignOut?: () => Promise<void>;
        flow?: 'silent' | 'redirect';
    }) => Promise<void>;
    signOutPass: (opts?: SignOutOptions) => Promise<void>;
    authClient: FutureverseAuthClient;
    userSession?: UserSession;
    authMethod?: string;
    isFetchingSession: boolean;
};
export declare const futureverseAuthContext: import('react').Context<FutureverseAuthContextProps | null>;
export type FutureverseAuthProviderProps = {
    authClient: FutureverseAuthClient;
    signer?: Signer;
};
export type SignInMethod = <T = object>(opts: SignInOptions<T>) => Promise<void | OIDCUser | null>;
export declare const FutureverseAuthProvider: ({ authClient, children, signer, }: PropsWithChildren<FutureverseAuthProviderProps>) => import("react/jsx-runtime").JSX.Element;
