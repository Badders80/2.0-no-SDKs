import { FutureverseAuthClient, SignInOptions } from '@futureverse/auth';
import { PropsWithChildren } from 'react';
import { ThemeConfig } from '../themes/DefaultThemes';
import { Locale } from '../locales';
interface AuthUiProviderProps {
    themeConfig: ThemeConfig;
    authClient: FutureverseAuthClient;
    locale?: Locale;
    orderedConnectorIds?: string[];
}
declare global {
    interface Window {
        ethereum?: any;
    }
}
export type SignInMethod = <T = object>(opts: SignInOptions<T>) => Promise<void>;
export declare enum State {
    IDLE = "idle",
    CONNECTING = "connecting",
    CONNECTED = "connected",
    DISCONNECTING = "disconnecting",
    SIGN_IN_PASS = "signInPass",
    CONNECT_ERROR = "connectError"
}
export type AuthUiContextProps = {
    isLoginOpen: boolean;
    openLogin: () => void;
    closeLogin: () => void;
};
declare const AuthUiProvider: ({ children, authClient, themeConfig, locale, orderedConnectorIds, }: PropsWithChildren<AuthUiProviderProps>) => JSX.Element;
declare const useAuthUi: () => AuthUiContextProps;
export { AuthUiProvider, useAuthUi };
