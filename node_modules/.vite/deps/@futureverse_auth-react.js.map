{
  "version": 3,
  "sources": ["../../@futureverse/auth-react/index.js"],
  "sourcesContent": ["import { jsx as A } from \"react/jsx-runtime\";\nimport { createContext as O, useState as P, useEffect as m, useMemo as l, useCallback as u, useContext as x } from \"react\";\nimport { useQuery as v } from \"@tanstack/react-query\";\nimport { useDisconnect as S, WagmiProvider as U, useAccount as W, useConnect as q, useConfig as I, useWalletClient as L } from \"wagmi\";\nimport { connectAndSignIn as b } from \"@futureverse/wagmi-connectors\";\nimport { clientToSigner as E } from \"@futureverse/signer\";\nconst F = O(null), z = ({\n  authClient: n,\n  children: t,\n  signer: o\n}) => {\n  const [r, c] = P(n.userSession), { disconnect: i } = S(), { isFetching: a } = v({\n    queryKey: [\"verifyAndLoadUser\"],\n    queryFn: async () => await n.verifyAndLoadUser(),\n    refetchOnWindowFocus: \"always\"\n  });\n  m(() => {\n    r == null && i();\n  }, [i, r]), m(() => {\n    const e = (s) => {\n      c(s);\n    };\n    return n.addUserStateListener(e), () => n.removeUserStateListener(e);\n  }, [n]);\n  const f = l(() => {\n    if (r != null)\n      return n.getSessionAuthType();\n  }, [n, r]), d = u(\n    async (e) => await n.signInPass({\n      signer: o,\n      ...e\n    }),\n    [n, o]\n  ), g = u(\n    async (e = { flow: \"redirect\" }) => {\n      await n.signOut({\n        flow: e == null ? void 0 : e.flow,\n        onBeforeRedirect: e == null ? void 0 : e.beforeSignOut\n      }), i();\n    },\n    [n, i]\n  ), w = u(\n    async (e = { flow: \"redirect\" }) => {\n      await n.signOutPass(e), i();\n    },\n    [n, i]\n  );\n  return /* @__PURE__ */ A(\n    F.Provider,\n    {\n      value: {\n        signIn: d,\n        signOut: g,\n        signOutPass: w,\n        authClient: n,\n        userSession: r,\n        authMethod: f,\n        isFetchingSession: a\n      },\n      children: t\n    }\n  );\n}, B = ({\n  initialState: n,\n  getWagmiConfig: t,\n  reconnectOnMount: o,\n  children: r\n}) => {\n  const { data: c } = v({\n    queryKey: [\"wagmiConfig\"],\n    queryFn: async () => await t(),\n    structuralSharing: !1,\n    refetchOnWindowFocus: !1,\n    refetchOnMount: !1\n  });\n  return c ? /* @__PURE__ */ A(\n    U,\n    {\n      config: c,\n      initialState: n,\n      reconnectOnMount: o,\n      children: r\n    }\n  ) : null;\n};\nfunction M() {\n  const n = x(F);\n  if (n === null)\n    throw new Error(\"useAuth must be used inside FutureverseAuthProvider\");\n  return n;\n}\nconst N = () => {\n  const { isConnected: n, connector: t, isConnecting: o } = W(), { connectAsync: r, connectors: c } = q(), { disconnectAsync: i } = S(), a = I(), { authClient: f } = M(), d = u(\n    // This curious type is a string type with autocomplete for known values\n    async (e) => {\n      const s = c.find((h) => h.id === e);\n      if (!s)\n        throw new Error(`Failed to find connector ${e}`);\n      return s !== t && await (t == null ? void 0 : t.disconnect()), await s.isAuthorized() || await r({ connector: s }), await s.getAccounts();\n    },\n    [r, t, c]\n  ), g = u(\n    async (e) => {\n      const s = c.find((y) => y.id === e) ?? t;\n      s || console.warn(\"No active connector to disconnect from\"), await i({ connector: s });\n    },\n    [c, i, t]\n  ), w = u(\n    async (e, s) => b(e, f, a, s),\n    [f, a]\n  );\n  return {\n    connect: d,\n    connectAndSignIn: w,\n    disconnect: g,\n    isConnected: n,\n    connector: t,\n    isConnecting: o,\n    connectors: c\n  };\n};\nfunction Q({\n  chainId: n,\n  connector: t\n} = {}) {\n  const { data: o } = L({ chainId: n, connector: t });\n  return l(() => o ? E(o) : void 0, [o]);\n}\nexport {\n  z as FutureverseAuthProvider,\n  B as FutureverseWagmiProvider,\n  F as futureverseAuthContext,\n  M as useAuth,\n  N as useConnector,\n  Q as useFutureverseSigner\n};\n"],
  "mappings": "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",
  "names": ["O", "P", "m", "l", "u", "A", "x"]
}
